#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <queue>

using namespace std;

#define MAX 1000+1

struct tomato {
	int x, y;
};

int dx[4] = { 0, 0, 1, -1 };
int dy[4] = { 1, -1, 0, 0 };
int box[MAX][MAX];
queue<tomato> q;

int n, m, ans = 0;

bool IsInside(int nx, int ny) {
	return (0 <= nx && 0 <= ny && nx < m&& ny < n);
}

void BFS() {
	while (!q.empty()) {
		int x = q.front().x;
		int y = q.front().y;
		q.pop();

		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];

			if ((IsInside(nx, ny) == 1) && box[ny][nx] == 0) {
				box[ny][nx] = box[y][x] + 1;
				q.push({ nx, ny });
			}
		}
	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	freopen("input.txt", "r", stdin);

	cin >> m >> n;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> box[i][j];
			if (box[i][j] == 1)
				q.push({ j, i });
		}
	}

	BFS();

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (box[i][j] == 0) {
				cout << -1;
				return 0;
			}
			if (ans < box[i][j])
				ans = box[i][j];
		}
	}
	cout << ans - 1;
	return 0;
}
